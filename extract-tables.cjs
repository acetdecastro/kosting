// @ts-nocheck
const fs = require("fs");
const path = require("path");
// import fs from "fs";
// import path from "path";

// Extract tables from schema.ts (generated by drizzle-kit pull) to individual files at /src/server/db/schema

const SCHEMA_PATH = path.join(__dirname, "src/server/db/schema.ts");
const OUTPUT_DIR = path.join(__dirname, "src/server/db/schema");

const schemaSrc = fs.readFileSync(SCHEMA_PATH, "utf8");

// Match all pgTable definitions
const tableRegex = /export const (\w+) = pgTable\([\s\S]+?\n\);/g;

if (!fs.existsSync(OUTPUT_DIR)) {
  fs.mkdirSync(OUTPUT_DIR, { recursive: true });
}

let imports = new Set();
let tables = [];
let match;

while ((match = tableRegex.exec(schemaSrc)) !== null) {
  const [fullDef, tableName] = match;
  tables.push({ tableName, fullDef });
}

// Find the import block at the top
const importBlock = schemaSrc.match(
  /import[\s\S]+?from "drizzle-orm\/pg-core";\nimport { sql } from "drizzle-orm";/,
);
const importText = importBlock ? importBlock[0] : "";

// Write each table to its own file
tables.forEach(({ tableName, fullDef }) => {
  // Find dependencies (other tables referenced in foreignKey)
  const deps = [];
  tables.forEach(({ tableName: depName }) => {
    if (depName !== tableName && fullDef.includes(depName)) {
      deps.push(depName);
    }
  });

  let fileText = importText + "\n";
  deps.forEach((dep) => {
    fileText += `import { ${dep} } from "./${dep
      .replace(/([A-Z])/g, "-$1")
      .toLowerCase()
      .replace(/^-/, "")}";\n`;
  });
  fileText += "\n" + fullDef + "\n";

  // Convert camelCase to kebab-case for filename
  const fileName =
    tableName
      .replace(/([A-Z])/g, "-$1")
      .toLowerCase()
      .replace(/^-/, "") + ".ts";
  fs.writeFileSync(path.join(OUTPUT_DIR, fileName), fileText);
});

// Remove all pgTable definitions from schema.ts and add imports/exports
let newSchema = schemaSrc.replace(tableRegex, "");
tables.forEach(({ tableName }) => {
  const fileName = tableName
    .replace(/([A-Z])/g, "-$1")
    .toLowerCase()
    .replace(/^-/, "");
  newSchema += `\nexport { ${tableName} } from "./schema/${fileName}";\n`;
});

fs.writeFileSync(SCHEMA_PATH, newSchema);

console.log("Extraction complete. Tables moved to /src/server/db/schema/");
